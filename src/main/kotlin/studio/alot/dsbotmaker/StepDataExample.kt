package studio.alot.dsbotmaker

import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow

/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è StepDataHolder –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ —à–∞–≥–∞
 */
class ExampleStepWithData : TelegramBotStep, TelegramBotStep.ButtonsSupported,
    TelegramBotStep.StepDataHolder<ExampleStepData> {

    override val dataStorage = mutableMapOf<Long, ExampleStepData>()

    override fun createStepData(userChatId: Long): ExampleStepData {
        return ExampleStepData().apply {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏
            userId = userChatId
            userName = "User_$userChatId" // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –∫ –ë–î
            visitCount = 1
            lastVisit = System.currentTimeMillis()
        }
    }

    override val nextStepVariantTypes: Set<String> = setOf("next_step")

    override fun getType(): String = "example_step_with_data"

    override fun getBody(userChatId: Long): String {
        val data = getStepData(userChatId)
        return """
            üìä <b>–ü—Ä–∏–º–µ—Ä —à–∞–≥–∞ —Å –¥–∞–Ω–Ω—ã–º–∏</b>
            
            üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${data.userName}
            üÜî ID: ${data.userId}
            üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–µ—â–µ–Ω–∏–π: ${data.visitCount}
            ‚è∞ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ: ${java.time.Instant.ofEpochMilli(data.lastVisit)}
            
            –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –æ–¥–∏–Ω —Ä–∞–∑ –∏ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤–æ –≤—Å–µ—Ö –º–µ—Ç–æ–¥–∞—Ö —à–∞–≥–∞!
        """.trimIndent()
    }

    override fun getButtons(userChatId: Long): List<KeyboardRow> {
        val data = getStepData(userChatId) // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        
        return listOf(
            KeyboardRow().apply {
                add("‚ûï –£–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ (${data.visitCount})")
            },
            KeyboardRow().apply {
                add("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –∏–º—è")
            },
            KeyboardRow().apply {
                add("‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥")
            }
        )
    }

    override fun getInputPlaceholder(userChatId: Long): String? = "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è"

    // –ü—Ä–∏–º–µ—Ä –º–µ—Ç–æ–¥–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    fun incrementCounter(userChatId: Long) {
        updateStepData(userChatId) {
            visitCount++
            lastVisit = System.currentTimeMillis()
        }
    }

    // –ü—Ä–∏–º–µ—Ä –º–µ—Ç–æ–¥–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏
    fun updateUserName(userChatId: Long, newName: String) {
        updateStepData(userChatId) {
            userName = newName
            lastVisit = System.currentTimeMillis()
        }
    }
}

/**
 * –ü—Ä–∏–º–µ—Ä –∫–ª–∞—Å—Å–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —à–∞–≥–∞
 * –ö–∞–∂–¥—ã–π —à–∞–≥ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–∞–Ω–Ω—ã—Ö
 */
data class ExampleStepData(
    var userId: Long = 0,
    var userName: String = "",
    var visitCount: Int = 0,
    var lastVisit: Long = 0
)
